{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\DatingWeb\\\\client\\\\src\\\\components\\\\Fireworks.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Fireworks = ({\n  show\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    if (show) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n\n      // Set up canvas properties\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n      canvas.width = width;\n      canvas.height = height;\n      ctx.fillStyle = '#FFF'; // Color of the fireworks\n\n      // Create fireworks\n      const fireworks = [];\n      const particles = [];\n      function Firework() {\n        this.x = Math.random() * width;\n        this.y = height;\n        this.color = '#FFF';\n        this.radius = Math.random() * 2 + 1;\n        this.velocity = Math.random() * 3 + 1;\n        this.opacity = 1;\n      }\n      Firework.prototype.draw = function () {\n        ctx.globalCompositeOperation = 'lighter';\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n        ctx.closePath();\n        ctx.fillStyle = this.color;\n        ctx.fill();\n      };\n      Firework.prototype.update = function () {\n        this.y -= this.velocity;\n        if (this.opacity > 0) {\n          this.opacity -= 0.01;\n        }\n      };\n      function createParticles(x, y) {\n        for (let i = 0; i < 30; i++) {\n          const particle = new Firework();\n          particle.x = x;\n          particle.y = y;\n          particle.color = '#FFF';\n          particles.push(particle);\n        }\n      }\n      function animate() {\n        ctx.globalCompositeOperation = 'destination-out';\n        ctx.fillStyle = 'rgba(0, 0, 0, 0.5)';\n        ctx.fillRect(0, 0, width, height);\n        ctx.globalCompositeOperation = 'lighter';\n        fireworks.forEach((firework, index) => {\n          firework.draw();\n          firework.update();\n          if (firework.opacity <= 0) {\n            fireworks.splice(index, 1);\n            createParticles(firework.x, firework.y);\n          }\n        });\n        particles.forEach((particle, index) => {\n          particle.draw();\n          particle.update();\n          if (particle.opacity <= 0) {\n            particles.splice(index, 1);\n          }\n        });\n        requestAnimationFrame(animate);\n      }\n      function createFirework() {\n        const firework = new Firework();\n        fireworks.push(firework);\n      }\n\n      // Trigger fireworks when 'show' prop changes\n      if (show) {\n        const fireworksInterval = setInterval(createFirework, 200);\n        animate();\n        return () => clearInterval(fireworksInterval);\n      }\n    }\n  }, [show]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 10\n  }, this);\n};\n_s(Fireworks, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = Fireworks;\nexport default Fireworks;\nvar _c;\n$RefreshReg$(_c, \"Fireworks\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","Fireworks","show","_s","canvasRef","canvas","current","ctx","getContext","width","window","innerWidth","height","innerHeight","fillStyle","fireworks","particles","Firework","x","Math","random","y","color","radius","velocity","opacity","prototype","draw","globalCompositeOperation","beginPath","arc","PI","closePath","fill","update","createParticles","i","particle","push","animate","fillRect","forEach","firework","index","splice","requestAnimationFrame","createFirework","fireworksInterval","setInterval","clearInterval","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/DatingWeb/client/src/components/Fireworks.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\n\r\nconst Fireworks = ({ show }) => {\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (show) {\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas.getContext('2d');\r\n      \r\n      // Set up canvas properties\r\n      const width = window.innerWidth;\r\n      const height = window.innerHeight;\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      ctx.fillStyle = '#FFF'; // Color of the fireworks\r\n\r\n      // Create fireworks\r\n      const fireworks = [];\r\n      const particles = [];\r\n\r\n      function Firework() {\r\n        this.x = Math.random() * width;\r\n        this.y = height;\r\n        this.color = '#FFF';\r\n        this.radius = Math.random() * 2 + 1;\r\n        this.velocity = Math.random() * 3 + 1;\r\n        this.opacity = 1;\r\n      }\r\n\r\n      Firework.prototype.draw = function() {\r\n        ctx.globalCompositeOperation = 'lighter';\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fillStyle = this.color;\r\n        ctx.fill();\r\n      };\r\n\r\n      Firework.prototype.update = function() {\r\n        this.y -= this.velocity;\r\n        if (this.opacity > 0) {\r\n          this.opacity -= 0.01;\r\n        }\r\n      };\r\n\r\n      function createParticles(x, y) {\r\n        for (let i = 0; i < 30; i++) {\r\n          const particle = new Firework();\r\n          particle.x = x;\r\n          particle.y = y;\r\n          particle.color = '#FFF';\r\n          particles.push(particle);\r\n        }\r\n      }\r\n\r\n      function animate() {\r\n        ctx.globalCompositeOperation = 'destination-out';\r\n        ctx.fillStyle = 'rgba(0, 0, 0, 0.5)';\r\n        ctx.fillRect(0, 0, width, height);\r\n        ctx.globalCompositeOperation = 'lighter';\r\n\r\n        fireworks.forEach((firework, index) => {\r\n          firework.draw();\r\n          firework.update();\r\n          if (firework.opacity <= 0) {\r\n            fireworks.splice(index, 1);\r\n            createParticles(firework.x, firework.y);\r\n          }\r\n        });\r\n\r\n        particles.forEach((particle, index) => {\r\n          particle.draw();\r\n          particle.update();\r\n          if (particle.opacity <= 0) {\r\n            particles.splice(index, 1);\r\n          }\r\n        });\r\n\r\n        requestAnimationFrame(animate);\r\n      }\r\n\r\n      function createFirework() {\r\n        const firework = new Firework();\r\n        fireworks.push(firework);\r\n      }\r\n\r\n      // Trigger fireworks when 'show' prop changes\r\n      if (show) {\r\n        const fireworksInterval = setInterval(createFirework, 200);\r\n        animate();\r\n\r\n        return () => clearInterval(fireworksInterval);\r\n      }\r\n    }\r\n  }, [show]);\r\n\r\n  return <canvas ref={canvasRef} />;\r\n};\r\n\r\nexport default Fireworks;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}